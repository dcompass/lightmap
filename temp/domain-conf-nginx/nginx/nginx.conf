#user root;
worker_processes 1 ;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;




events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  565;

#    gzip  on;
upstream backend {
    server localhost:3000;
}
upstream frontend {
    server localhost:3001;
}
map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

#map $http_accept_language $lang {
#    default en;
#    ~ru ru;
#    ~uk uk;
#~fr fr;
#~pt pt;
#}
map $http_origin $lang {  
       fr.skiscooldev.com fr; 
       ru.skiscooldev.com ru; 
       pt.skiscooldev.com pt; 
       uk.skiscooldev.com uk;
       }
        

#server {
#    listen 80;
#    server_name fr.skiscool.com;
#    return 301 https://fr.skiscool.com$request_uri;
#}

#server {
#    listen 80;
 #   server_name www.skiscool.com;
 #   return 301 https://www.skiscool.com$request_uri;
#}
    server { 
    listen 80;
   listen 443 ssl; 
    server_name  localhost www.skiscooldev.com fr.skiscooldev.com pt.skiscooldev.com ru.skiscooldev.com uk.skiscooldev.com;
 
 ssl on;
  ssl_certificate /usr/local/etc/openssl/certs/apache-selfsigned.pem;
ssl_certificate_key /usr/local/etc/openssl/private/apache-selfsigned.key;
#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#ssl_session_timeout 5m;
#ssl_ciphers 'AES128+EECDH:AES128+EDH';
#ssl_prefer_server_ciphers on;

#proxy_cookie_domain localhost $http_origin;

 location /auth/ {
set $cors '';
if ($http_host ~* '(localhost|www\.skiscooldev\.com|fr\.skiscooldev\.com|ru\.skiscooldev\.com)') {
        set $cors 'true';
}

 proxy_redirect off;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $http_host; 
proxy_set_header HTTP_REFERER $http_referer; 

        if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
        }

        if ($request_method = 'GET') {
            set $cors "trueget";
        }
        if ($request_method = 'POST') {
            set $cors "${cors}post";
        }

        if ($cors = "trueget") {
            add_header 'Access-Control-Allow-Origin' "$http_host";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "truepost") {
            add_header 'Access-Control-Allow-Origin' "$http_host";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "trueoptions") {
            add_header 'Access-Control-Allow-Origin' "$http_host";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }
proxy_pass https://backend;
}

#location ^~ /__webpack_hmr {
#proxy_pass https://localhost:3001;
#}
location ^~ /browser-sync/socket.io {
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "upgrade";
proxy_set_header Host $host;
proxy_pass https://localhost:3002;
}

location ^~ /socket {
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "upgrade";
proxy_set_header Host $host;
proxy_pass https://localhost:3000;
}

location ^~ /api {
proxy_pass https://backend;
}
location / { 
		proxy_set_header HTTP_REFERER $http_referer; 
		proxy_pass_header       Server;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        X-Scheme $scheme;
		proxy_set_header        Host $http_host;
		proxy_set_header        X-NginX-Proxy true;
		proxy_connect_timeout   5;
		proxy_read_timeout      240;
		proxy_intercept_errors  on;
		
set $cors '';

if ($http_host ~* '(localhost|www\.skiscooldev\.com|fr\.skiscooldev\.com|ru\.skiscooldev\.com)') {
        set $cors 'true';
}
        if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
        }

        if ($request_method = 'GET') {
            set $cors "${cors}get";
        }
        if ($request_method = 'POST') {
            set $cors "${cors}post";
        }

	 if ($cors = "trueget") {
            add_header 'Access-Control-Allow-Origin' "$http_host";
            add_header 'Access-Control-Allow-Credentials' 'true';
       }

        if ($cors = "truepost") {
            add_header 'Access-Control-Allow-Origin' "$http_host";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "trueoptions") {
            add_header 'Access-Control-Allow-Origin' "$http_host";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }


		proxy_pass              https://127.0.0.1:3001; #the nodeApp is listening on port 3001
  
		proxy_redirect          off;
        # Socket.IO Support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
}
 
location ^~ /dist {
            proxy_pass https://127.0.0.1:3001;
            #root   html;
            #index  index.html index.htm;
        }

location ~* \.(gif|jpg|jpeg|js|json|map)$ {
  proxy_pass https://127.0.0.1:3001;
            #root   html;
            #index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   https://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }



    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

 
    include servers/*;
}
